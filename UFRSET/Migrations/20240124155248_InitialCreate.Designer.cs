// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UFRSET.Data;

#nullable disable

namespace UFRSET.Migrations
{
    [DbContext(typeof(UFRSETContext))]
    [Migration("20240124155248_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DepartementFiliere", b =>
                {
                    b.Property<int>("DepartementsDepartementId")
                        .HasColumnType("int");

                    b.Property<int>("FilieresFiliereId")
                        .HasColumnType("int");

                    b.HasKey("DepartementsDepartementId", "FilieresFiliereId");

                    b.HasIndex("FilieresFiliereId");

                    b.ToTable("DepartementFiliere");
                });

            modelBuilder.Entity("UFRSET.Models.Departement", b =>
                {
                    b.Property<int>("DepartementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartementId"));

                    b.Property<string>("NomDepartement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartementId");

                    b.ToTable("Departement");
                });

            modelBuilder.Entity("UFRSET.Models.Filiere", b =>
                {
                    b.Property<int>("FiliereId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FiliereId"));

                    b.Property<string>("NomFiliere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FiliereId");

                    b.ToTable("Filiere");
                });

            modelBuilder.Entity("UFRSET.Models.Per", b =>
                {
                    b.Property<int>("PerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PerId"));

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("NomPer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Specialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PerId");

                    b.HasIndex("DepartementId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Per");
                });

            modelBuilder.Entity("UFRSET.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("NomService")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ServiceId");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("UFRSET.Models.Vacataire", b =>
                {
                    b.Property<int>("VacataireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VacataireId"));

                    b.Property<int>("DepartementId")
                        .HasColumnType("int");

                    b.Property<string>("NomVacataire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Specialite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VacataireId");

                    b.HasIndex("DepartementId");

                    b.HasIndex("ServiceId");

                    b.ToTable("Vacataire");
                });

            modelBuilder.Entity("DepartementFiliere", b =>
                {
                    b.HasOne("UFRSET.Models.Departement", null)
                        .WithMany()
                        .HasForeignKey("DepartementsDepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UFRSET.Models.Filiere", null)
                        .WithMany()
                        .HasForeignKey("FilieresFiliereId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("UFRSET.Models.Per", b =>
                {
                    b.HasOne("UFRSET.Models.Departement", "Departement")
                        .WithMany("Pers")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UFRSET.Models.Service", "Service")
                        .WithMany("Pers")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("UFRSET.Models.Vacataire", b =>
                {
                    b.HasOne("UFRSET.Models.Departement", "Departement")
                        .WithMany("Vacataires")
                        .HasForeignKey("DepartementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UFRSET.Models.Service", "Service")
                        .WithMany("Vacataires")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departement");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("UFRSET.Models.Departement", b =>
                {
                    b.Navigation("Pers");

                    b.Navigation("Vacataires");
                });

            modelBuilder.Entity("UFRSET.Models.Service", b =>
                {
                    b.Navigation("Pers");

                    b.Navigation("Vacataires");
                });
#pragma warning restore 612, 618
        }
    }
}
